import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class WhenIWorkAdvanceWeek extends Thread {

	static WebDriver wd;
	static String dayToChange = "Mon";
	static int cHour = 3;
	static int cMin = 18;
	static int cSec = 00;
	static Robot robot;
	
	public static void main(String[] args) {
		initialize();
		zoom();
		wd.findElement(By.xpath("//button[@class='btn btn-secondary navigate-previous btn-panel btn-md']")).click();
		advance();
	}
	
	public static void zoom() {
		 
//		try {
//			robot = new Robot();
//			robot.keyPress(KeyEvent.VK_CONTROL);
//			robot.keyPress(KeyEvent.VK_SUBTRACT); 
//			robot.keyRelease(KeyEvent.VK_SUBTRACT);
//			robot.keyPress(KeyEvent.VK_SUBTRACT); 
//			robot.keyRelease(KeyEvent.VK_SUBTRACT);
//			robot.keyRelease(KeyEvent.VK_CONTROL);
//		} catch (AWTException e) {
//			e.printStackTrace();
//		} 
		
		WebElement body = wd.findElement(By.tagName("body"));
		body.sendKeys(Keys.chord(Keys.CONTROL, Keys.ADD));
		
	}
	
	public static void initialize() {
		String path = "libs/chromedriver.exe";
		System.setProperty("webdriver.chrome.driver", path);
		
		ChromeOptions options = new ChromeOptions(); 
		options.addArguments("disable-infobars");

		wd = new ChromeDriver(options);
		WebDriverWait wait = new WebDriverWait(wd, 20);
		wd.get("https://appx.wheniwork.com/scheduler");
		wd.manage().window().maximize();
		wd.findElement(By.id("email")).sendKeys("PhoenixFireWolf@live.com");
		wd.findElement(By.id("password")).sendKeys("u#htJv$7!@a39h7");
		wd.findElement(By.xpath("//button[@class='btn btn-primary btn-login btn-md btn-block']")).click();
		wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(
				"//button[@class='btn btn-secondary toggle-fullscreen btn-icn btn-panel btn-md']"))).click();
		wd.findElement(By.xpath("//div[@class='hide-sidebar hint--right']")).click();
	}
	
	public static boolean dayToChange() {
		Date now = new Date();
        SimpleDateFormat simpleDateformat = new SimpleDateFormat("E");
        return simpleDateformat.format(now).equals(dayToChange);
	}
	
	public static boolean timeToChange() {
		LocalDateTime now = LocalDateTime.now();
		int hour = now.getHour();
		int minute = now.getMinute();
		int second = now.getSecond();
		return hour == cHour && minute == cMin && second == cSec;
	}
	
	public static void advance() {
		while(true) {
			if(dayToChange() && timeToChange()) {
				wd.findElement(By.xpath("//button[@class='btn btn-secondary mr-2 navigate-today btn-panel btn-md']")).click();
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}
}